version: v1.0
name: Build And Release
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
fail_fast:
  cancel:
    when: 'true'
auto_cancel:
  running:
    when: 'true'
blocks:
  - name: ESLint
    task:
      jobs:
        - name: npx eslint
          commands:
            - '# checkout'
            - '# cd aurelia-spa/'
            - npm install --quiet
            - 'npx eslint ./src --ext .ts,.tsx --report-unused-disable-directives'
      env_vars:
        - name: FOO_1
          value: BAR_1
      prologue:
        commands:
          - '# Get the latest version of our source code from GitHub:'
          - checkout
          - cd aurelia-spa/
          - '# Use the version of Node.js specified in .nvmrc.'
          - '# Semaphore provides nvm preinstalled.'
          - nvm use
          - node --version
          - npm --version
    dependencies: []
  - name: Webpack Build
    dependencies:
      - ESLint
    task:
      jobs:
        - name: npm run build
          commands:
            - cd aurelia-spa/
            - npm install --quiet
            - npm run build
      prologue:
        commands:
          - '# Get the latest version of our source code from GitHub:'
          - checkout
          - cd aurelia-spa/
          - '# Use the version of Node.js specified in .nvmrc.'
          - '# Semaphore provides nvm preinstalled.'
          - nvm use
          - node --version
          - npm --version
  - name: DotNet Build
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'mcr.microsoft.com/dotnet/core/sdk:latest'
      jobs:
        - name: dotnet publish
          commands:
            - dotnet restore --packages $NUGET_PACKAGES_DIRECTORY
            - dotnet publish --configuration Release --no-restore
            - artifact push workflow ./Prime.WebApi/bin/Release/netcoreapp3.1/publish/
      prologue:
        commands:
          - checkout
          - cd dotnet-web-api/
      env_vars:
        - name: NUGET_PACKAGES_DIRECTORY
          value: .nuget
  - name: Dockerize DotNet
    dependencies:
      - DotNet Test
    task:
      jobs:
        - name: docker build
          commands:
            - cd dotnet-web-api/Prime.WebApi/
            - 'docker build --pull -t "primes/api-dotnet:$SEMAPHORE_GIT_SHA"  .'
  - name: Dockerize SPA
    dependencies:
      - Webpack Build
    task:
      jobs:
        - name: docker build
          commands:
            - cp ./aurelia-spa/dist/* ./lighttpd/htdocs/
            - 'docker build -t "primes/web-app:$SEMAPHORE_GIT_SHA" lighttpd/'
  - name: Generate Changelog
    dependencies: []
    task:
      jobs:
        - name: git-changelog
          commands:
            - echo "Fake Generate Changelog"
  - name: Generate Release
    dependencies:
      - Dockerize DotNet
      - Dockerize Quarkus
      - Dockerize SPA
      - Generate Changelog
    task:
      jobs:
        - name: Upload artifacts
          commands:
            - echo "Fake release"
  - name: Build Quarkus
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'ghcr.io/graalvm/graalvm-ce:latest'
      jobs:
        - name: mvn package
          commands:
            - ./mvnw $MAVEN_CLI_OPTS clean package $MAVEN_OPTS
      env_vars:
        - name: MAVEN_CLI_OPTS
          value: '--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true'
        - name: MAVEN_OPTS
          value: '-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'
      prologue:
        commands:
          - checkout
          - cd quarkus-api/
          - chmod +x ./mvnw
  - name: Dockerize Quarkus
    dependencies:
      - Build Quarkus
    task:
      jobs:
        - name: docker build
          commands:
            - cd quarkus-api/
            - 'docker build -f ./src/main/docker/Dockerfile.jvm -t "primes/api-quarkus:$SEMAPHORE_GIT_SHA" .'
  - name: DotNet Test
    dependencies:
      - DotNet Build
    task:
      prologue:
        commands:
          - apt install tree
          - tree -I 'node_modules|.nuget'
          - cd dotnet-web-api/
      jobs:
        - name: Test
          commands:
            - 'dotnet test /p:CollectCoverage=true /p:CoverletOutput=''../artifacts/coverage.json'' --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"'
